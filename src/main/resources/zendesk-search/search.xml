<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~   WSO2 Inc. licenses this file to you under the Apache License,
  ~   Version 2.0 (the "License"); you may not use this file except
  ~   in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->
<template name="search" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="query" description="The query parameter to be searched."/>
    <parameter name="sortBy" description="Search results sorted options."/>
    <parameter name="sortOrder" description="Search results sorted order."/>
    <sequence>
        <property name="uri.var.query" expression="$func:query"/>
        <property name="uri.var.sortBy" expression="$func:sortBy"/>
        <property name="uri.var.sortOrder" expression="$func:sortOrder"/>
        <property name="uri.var.searchQuery" value=""/>
        <filter xpath="boolean(get-property('uri.var.query'))">
            <then>
                <property name="uri.var.searchQuery"
                          expression="fn:concat(get-property('uri.var.searchQuery'),'query=',get-property('uri.var.query'),'&amp;')"/>
            </then>
        </filter>
        <filter xpath="boolean(get-property('uri.var.sortBy'))">
            <then>
                <property name="uri.var.searchQuery"
                          expression="fn:concat(get-property('uri.var.searchQuery'),'sort_by=',get-property('uri.var.sortBy'), '&amp;')"/>
            </then>
        </filter>
        <filter xpath="boolean(get-property('uri.var.sortOrder'))">
            <then>
                <property name="uri.var.searchQuery"
                          expression="fn:concat(get-property('uri.var.searchQuery'),'sort_order=',get-property('uri.var.sortOrder'), '&amp;')"/>
            </then>
        </filter>
        <filter xpath="fn:string-length(get-property('uri.var.searchQuery')) > 0">
            <then>
                <property name="uri.var.searchQuery"
                          expression="fn:concat('?', fn:substring(get-property('uri.var.searchQuery'), 1, fn:string-length(get-property('uri.var.searchQuery'))-1))"/>
            </then>
        </filter>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="legacy-encoding:{uri.var.apiUrl}/api/v2/search.json{+uri.var.searchQuery}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="ETag" scope="transport" action="remove"/>
        <header name="Status" scope="transport" action="remove"/>
        <header name="Location" scope="transport" action="remove"/>
        <header name="Via" scope="transport" action="remove"/>
        <header name="X-Content-Type-Options" scope="transport" action="remove"/>
        <header name="X-Frame-Options" scope="transport" action="remove"/>
        <header name="X-Rack-Cache" scope="transport" action="remove"/>
        <header name="X-Request-Id" scope="transport" action="remove"/>
        <header name="X-Runtime" scope="transport" action="remove"/>
        <header name="X-UA-Compatible" scope="transport" action="remove"/>
        <header name="X-Zendesk-API-Version" scope="transport" action="remove"/>
        <header name="X-Zendesk-Origin-Server" scope="transport" action="remove"/>
        <header name="X-Zendesk-Request-Id" scope="transport" action="remove"/>
        <header name="X-Zendesk-User-Id" scope="transport" action="remove"/>
        <header name="WWW-Authenticate" scope="transport" action="remove"/>
        <header name="Set-Cookie" scope="transport" action="remove"/>
        <header name="Strict-Transport-Security" scope="transport" action="remove"/>
    </sequence>
</template>